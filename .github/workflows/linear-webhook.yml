name: Handle Linear Issue Created

on:
  repository_dispatch:
    types: [linear_issue_created]

permissions:
  contents: write
  pull-requests: write

jobs:
  handle-linear-issue:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Linear Issue Data
        id: linear
        run: |
          echo "issue_id=${{ github.event.client_payload.issueId }}" >> $GITHUB_OUTPUT
          echo "issue_title=${{ github.event.client_payload.issueTitle }}" >> $GITHUB_OUTPUT
          echo "issue_url=${{ github.event.client_payload.issueUrl }}" >> $GITHUB_OUTPUT

      - name: Compute branch name
        id: names
        run: |
          # branch: linear-<ISSUE_ID>-<slug-of-title>
          TITLE_SLUG="$(echo "${{ steps.linear.outputs.issue_title }}" | tr '[:upper:]' '[:lower:]' | tr -cd 'a-z0-9- ' | tr ' ' '-' | sed 's/--*/-/g' | cut -c1-40)"
          BRANCH="linear-${{ steps.linear.outputs.issue_id }}${TITLE_SLUG:+-$TITLE_SLUG}"
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Create branch from latest main
        run: |
          git config user.name 'Linear Webhook Bot'
          git config user.email 'noreply@github.com'
          git fetch origin main
          git checkout -B "${{ steps.names.outputs.branch }}" origin/main

      - name: Add tracking file and commit
        run: |
          mkdir -p issues
          cat > "issues/${{ steps.linear.outputs.issue_id }}.md" << 'EOF'
          # Linear Issue: ${{ steps.linear.outputs.issue_title }}

          **Issue ID:** ${{ steps.linear.outputs.issue_id }}
          **Created:** $(date -u +"%Y-%m-%dT%H:%M:%SZ")
          **Linear URL:** ${{ steps.linear.outputs.issue_url }}

          ## Description
          This file was automatically created from a Linear issue.

          ## Tasks
          - [ ] Review issue requirements
          - [ ] Implement solution
          - [ ] Test changes
          - [ ] Update this PR
          EOF
          git add .
          git commit -m "chore: bootstrap for ${{ steps.linear.outputs.issue_id }}"

      - name: Push branch
        run: git push -u origin "${{ steps.names.outputs.branch }}"

      - name: Create Pull Request
        id: create_pull_request
        uses: actions/github-script@v7
        with:
          script: |
            const title = `Linear: ${{ steps.linear.outputs.issue_id }} â€” ${{ steps.linear.outputs.issue_title }}`;
            const body = `
            ## Linear Issue Integration

            **Issue ID:** ${{ steps.linear.outputs.issue_id }}
            **Title:** ${{ steps.linear.outputs.issue_title }}
            **Linear URL:** ${{ steps.linear.outputs.issue_url }}

            This PR was created automatically from a Linear webhook.
            `;
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              head: "${{ steps.names.outputs.branch }}",
              base: "main",
              body,
              draft: true
            });
            core.setOutput("pr_number", pr.number);

      - name: Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: Number("${{ steps.create_pull_request.outputs.pr_number || 0 }}") || undefined,
              body: `ðŸŽ¯ Linked to Linear: [${{ steps.linear.outputs.issue_id }}](${{ steps.linear.outputs.issue_url }})`
            }).catch(() => {});
